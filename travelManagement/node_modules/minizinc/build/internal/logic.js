"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var interfaces_1 = require("../interfaces");
var parseError_1 = tslib_1.__importDefault(require("../output/parseError"));
var abort_1 = require("./abort");
var common_1 = require("./common");
var utils_1 = require("./utils");
function resolveSolvers(mzn) {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var r, output;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, mzn.run(['--solvers-json'])];
                case 1:
                    r = _a.sent();
                    if (r.exitCode) {
                        // error case
                        throw new interfaces_1.BackendException([{
                                type: 'unknown',
                                message: r.stderr
                            }]);
                    }
                    output = utils_1.normalize(r.stdout);
                    return [2 /*return*/, JSON.parse(output)];
            }
        });
    });
}
exports.resolveSolvers = resolveSolvers;
function version(mzn) {
    return Promise.resolve(mzn.run(['--version'])).then(function (out) { return out.stdout; });
}
exports.version = version;
function analyzeImpl(mzn, params, extraArgs, modelFile, signal) {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var args, r;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    args = common_1.toAnalyzeArguments(modelFile, params).args;
                    return [4 /*yield*/, mzn.run(args.concat(extraArgs))];
                case 1:
                    r = _a.sent();
                    if (signal && signal.aborted) {
                        throw new abort_1.AbortException();
                    }
                    if (r.exitCode) {
                        // error case
                        throw new interfaces_1.BackendException(parseError_1.default(r.stderr, modelFile));
                    }
                    return [2 /*return*/, common_1.parseAnalyzeOutput(r.stdout)];
            }
        });
    });
}
exports.analyzeImpl = analyzeImpl;
function createExtraIncludeFiles(tmpDir, sep, simpleFileSystem, extraIncludeFiles) {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var fileNames, dir;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    fileNames = Object.keys(extraIncludeFiles);
                    if (fileNames.length === 0) {
                        return [2 /*return*/, Promise.resolve({
                                includePath: null,
                                cleanup: null
                            })];
                    }
                    dir = "" + tmpDir + sep + "include";
                    return [4 /*yield*/, simpleFileSystem.ensureDir(dir)];
                case 1:
                    _a.sent();
                    return [4 /*yield*/, Promise.all(fileNames.map(function (d) { return simpleFileSystem.writeTextFile("" + dir + sep + d, extraIncludeFiles[d]); }))];
                case 2:
                    _a.sent();
                    return [2 /*return*/, {
                            includePath: dir,
                            cleanup: function () {
                                return Promise.all(fileNames.map(function (d) { return simpleFileSystem.writeTextFile("" + dir + sep + d, ''); }));
                            }
                        }];
            }
        });
    });
}
exports.createExtraIncludeFiles = createExtraIncludeFiles;
//# sourceMappingURL=logic.js.map