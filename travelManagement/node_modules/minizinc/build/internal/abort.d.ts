/// <reference types="node" />
import { EventEmitter } from 'events';
export interface IAbortSignal {
    readonly aborted: boolean;
    on(event: 'abort', listener: () => void): void;
    once(event: 'abort', listener: () => void): void;
    off(event: 'abort', listener: () => void): void;
}
export default class AbortSignal extends EventEmitter implements IAbortSignal {
    aborted: boolean;
    abort(): void;
}
export declare class AbortException extends Error {
    constructor(message?: string);
}
//# sourceMappingURL=abort.d.ts.map