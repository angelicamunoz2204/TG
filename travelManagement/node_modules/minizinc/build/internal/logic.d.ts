import { IRunResult, ISimpleFS } from 'emscripten_wrapper';
import { ISolverConfiguration, IModelParams } from '../interfaces';
import { IAbortSignal } from './abort';
export interface IRunner {
    run(args: string[], stdin?: string): Promise<IRunResult> | IRunResult;
}
export declare function resolveSolvers(mzn: IRunner): Promise<ISolverConfiguration[]>;
export declare function version(mzn: IRunner): Promise<string>;
export declare function analyzeImpl(mzn: IRunner, params: IModelParams, extraArgs: string[], modelFile: string, signal?: IAbortSignal): Promise<import("../interfaces").IModelMetaData>;
export declare function createExtraIncludeFiles(tmpDir: string, sep: string, simpleFileSystem: ISimpleFS, extraIncludeFiles: {
    [name: string]: string;
}): Promise<{
    includePath: null;
    cleanup: null;
} | {
    includePath: string;
    cleanup: () => Promise<true[]>;
}>;
//# sourceMappingURL=logic.d.ts.map