"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var abort_1 = require("./internal/abort");
exports.AbortSignal = abort_1.default;
exports.AbortException = abort_1.AbortException;
var EType;
(function (EType) {
    EType["unknown"] = "unknown";
    EType["int"] = "int";
    EType["float"] = "float";
    EType["bool"] = "bool";
    EType["string"] = "string";
    EType["ann"] = "ann";
})(EType = exports.EType || (exports.EType = {}));
function isEnumValue(v) {
    return v != null && typeof v.e === 'string';
}
exports.isEnumValue = isEnumValue;
function isSet(v) {
    return v != null && Array.isArray(v.set);
}
exports.isSet = isSet;
function isSetRange(v) {
    return v != null && Array.isArray(v.set) && v.set.length === 1 && Array.isArray(v.set[0]) && typeof v.set[0][0] === 'number';
}
exports.isSetRange = isSetRange;
var EnumValue = /** @class */ (function () {
    function EnumValue(e) {
        this.e = e;
    }
    EnumValue.prototype.toString = function () {
        return this.e;
    };
    return EnumValue;
}());
function createEnumValue(value) {
    return new EnumValue(value);
}
exports.createEnumValue = createEnumValue;
function injectTypeInfo(v, prop) {
    var vany = v;
    if (typeof v === 'number' || typeof v === 'boolean') {
        return vany;
    }
    vany._prop = prop;
    return vany;
}
exports.injectTypeInfo = injectTypeInfo;
function hasTypeInfo(v) {
    return v._prop != null;
}
exports.hasTypeInfo = hasTypeInfo;
function asTypedValue(v, prop) {
    if (prop.set) {
        return injectTypeInfo(v.set, prop);
    }
    return injectTypeInfo(v, prop);
}
exports.asTypedValue = asTypedValue;
var EMethod;
(function (EMethod) {
    EMethod["SATISFY"] = "SATISFY";
    EMethod["MINIMIZE"] = "MINIMIZE";
    EMethod["MAXIMIZE"] = "MAXIMIZE";
})(EMethod = exports.EMethod || (exports.EMethod = {}));
var EStatus;
(function (EStatus) {
    EStatus["ERROR"] = "ERROR";
    EStatus["UNKNOWN"] = "UNKNOWN";
    EStatus["UNBOUNDED"] = "UNBOUNDED";
    EStatus["UNSATISFIABLE"] = "UNSATISFIABLE";
    EStatus["SATISFIED"] = "SATISFIED";
    EStatus["ALL_SOLUTIONS"] = "ALL_SOLUTIONS";
    EStatus["OPTIMAL_SOLUTION"] = "OPTIMAL_SOLUTION";
})(EStatus = exports.EStatus || (exports.EStatus = {}));
var ProxyMiniZinc = /** @class */ (function () {
    function ProxyMiniZinc(loader, options) {
        if (options === void 0) { options = {}; }
        this.loader = loader;
        this.options = options;
        this._instance = null;
    }
    Object.defineProperty(ProxyMiniZinc.prototype, "instance", {
        get: function () {
            var _this = this;
            if (this._instance) {
                return this._instance;
            }
            return this._instance = this.loader().then(function (module) { return new module.default(_this.options); });
        },
        enumerable: true,
        configurable: true
    });
    ProxyMiniZinc.prototype.analyze = function (code, options) {
        return this.instance.then(function (i) { return i.analyze(code, options); });
    };
    ProxyMiniZinc.prototype.solve = function (params, data, options) {
        return this.instance.then(function (i) { return i.solve(params, data, options); });
    };
    ProxyMiniZinc.prototype.solveRaw = function (params, data, options) {
        return this.instance.then(function (i) { return i.solveRaw(params, data, options); });
    };
    ProxyMiniZinc.prototype.resolveSolvers = function () {
        return this.instance.then(function (i) { return i.resolveSolvers(); });
    };
    ProxyMiniZinc.prototype.version = function () {
        return this.instance.then(function (i) { return i.version(); });
    };
    ProxyMiniZinc.prototype.terminate = function () {
        if (!this._instance) { // nothing to terminate
            return Promise.resolve(true);
        }
        return this.instance.then(function (i) { return i.terminate(); });
    };
    return ProxyMiniZinc;
}());
exports.ProxyMiniZinc = ProxyMiniZinc;
var BackendException = /** @class */ (function (_super) {
    tslib_1.__extends(BackendException, _super);
    function BackendException(errors) {
        var _this = _super.call(this, errors[0].message) || this;
        _this.errors = errors;
        return _this;
    }
    Object.defineProperty(BackendException.prototype, "error", {
        get: function () {
            return this.errors[0];
        },
        enumerable: true,
        configurable: true
    });
    return BackendException;
}(Error));
exports.BackendException = BackendException;
function defaultValue(prop) {
    if (prop.dim > 0) {
        return [];
    }
    if (prop.set) {
        return {
            set: []
        };
    }
    if (prop.enum_type) { // single enum value
        return null;
    }
    switch (prop.type) {
        case EType.int:
            return 0;
        case EType.float:
            return 0.0;
        case EType.bool:
            return false;
        case EType.string:
            return '';
        default:
            return null;
    }
}
exports.defaultValue = defaultValue;
//# sourceMappingURL=interfaces.js.map