"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var gecode_js_1 = tslib_1.__importDefault(require("gecode-js"));
var minizinc_js_1 = tslib_1.__importDefault(require("minizinc-js"));
var abort_1 = require("./internal/abort");
var embedded_1 = require("./internal/embedded");
var logic_1 = require("./internal/logic");
var MZNWrapper = /** @class */ (function () {
    function MZNWrapper(mod, instance) {
        this.mod = mod;
        this.instance = instance;
    }
    MZNWrapper.prototype.chooseSolver = function (solvers, solver) {
        return this.mod.chooseSolver(solvers, solver);
    };
    Object.defineProperty(MZNWrapper.prototype, "simpleFileSystem", {
        get: function () {
            return this.instance.simpleFileSystem;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MZNWrapper.prototype, "stdout", {
        get: function () {
            return this.instance.stdout;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MZNWrapper.prototype, "stderr", {
        get: function () {
            return this.instance.stderr;
        },
        enumerable: true,
        configurable: true
    });
    MZNWrapper.prototype.run = function (args, stdin) {
        return this.instance.run(args, stdin);
    };
    MZNWrapper.prototype.kill = function () {
        this.instance.kill();
    };
    return MZNWrapper;
}());
var EmbeddedMiniZinc = /** @class */ (function () {
    function EmbeddedMiniZinc(options) {
        if (options === void 0) { options = {}; }
        this.options = options;
        this.mzn = options.mzn || minizinc_js_1.default;
        this.solvers = options.solvers && options.solvers.length > 0 ? options.solvers : [gecode_js_1.default];
        for (var _i = 0, _a = this.solvers; _i < _a.length; _i++) {
            var s = _a[_i];
            this.mzn.registerSolver(s);
        }
        if (!options.eagerLoad) {
            return;
        }
        // start loading by calling the sync metho
        this.mzn.sync();
        for (var _b = 0, _c = this.solvers; _b < _c.length; _b++) {
            var s = _c[_b];
            s.sync();
        }
    }
    EmbeddedMiniZinc.prototype.solve = function (paramsOrCode, data, options) {
        if (options === void 0) { options = {}; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var mzn;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.mzn.sync()];
                    case 1:
                        mzn = _a.sent();
                        if (options.signal && options.signal.aborted) {
                            throw new abort_1.AbortException();
                        }
                        return [2 /*return*/, embedded_1.solveEmbedded(new MZNWrapper(this.mzn, mzn), this.solvers, paramsOrCode, data, options, this.options)];
                }
            });
        });
    };
    EmbeddedMiniZinc.prototype.solveRaw = function (paramsOrCode, data, options) {
        if (options === void 0) { options = {}; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var mzn;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.mzn.sync()];
                    case 1:
                        mzn = _a.sent();
                        if (options.signal && options.signal.aborted) {
                            throw new abort_1.AbortException();
                        }
                        return [2 /*return*/, embedded_1.solveRawEmbedded(new MZNWrapper(this.mzn, mzn), this.solvers, paramsOrCode, data, options, this.options)];
                }
            });
        });
    };
    EmbeddedMiniZinc.prototype.analyze = function (paramsOrCode, options) {
        if (options === void 0) { options = {}; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var mzn;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.mzn.sync()];
                    case 1:
                        mzn = _a.sent();
                        if (options.signal && options.signal.aborted) {
                            throw new abort_1.AbortException();
                        }
                        return [2 /*return*/, embedded_1.analyzeEmbedded(mzn, this.solvers, paramsOrCode, options, this.options)];
                }
            });
        });
    };
    EmbeddedMiniZinc.prototype.runImpl = function (args, stdin) {
        return this.mzn.run(args, stdin);
    };
    EmbeddedMiniZinc.prototype.resolveSolvers = function () {
        return logic_1.resolveSolvers(this.mzn);
    };
    EmbeddedMiniZinc.prototype.version = function () {
        return logic_1.version(this.mzn);
    };
    EmbeddedMiniZinc.prototype.terminate = function () {
        return Promise.resolve(true);
    };
    return EmbeddedMiniZinc;
}());
exports.default = EmbeddedMiniZinc;
//# sourceMappingURL=EmbeddedMiniZinc.js.map